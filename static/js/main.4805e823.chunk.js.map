{"version":3,"sources":["components/Fullpage.js","components/DownArrow.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","id","style","Component","DownArrow","filter","isInvert","src","icon","width","TitlesAndIcons","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","prevProps","prevState","colorSet","elements","document","getElementsByClassName","i","length","color","data","colorSets","snowColor","_this","modules","name","Fullpage_Fullpage","backgroundColor","bgColor","lib_default","freezeOnBlur","useTwinkleEffect","vMaxX","vMaxY","followMouse","snowStick","targetElement","titleColor","title","subTitleColor","subtitle","keys","links","map","k","react_social_icons","key","url","iconColor","activeClass","to","spy","smooth","duration","src_components_DownArrow","icons","down","sections","items","obj","content","SkillCard","skill","background-color","image","height","SkillSection","SkillCard_SkillCard","state","wandIcon","magicWand","_this2","href","onClick","scrollPos","window","scrollY","ColorChangerTrigger","onMouseEnter","setState","magicWandHover","onMouseLeave","display","showWand","App","handleScroll","event","scrollBreaked","scrollTo","getRandomColor","cs","Math","floor","random","addEventListener","removeEventListener","NavBar_TitlesAndIcons","changeColor","bind","TitlesAndIcons_TitlesAndIcons","AboutSection_TitlesAndIcons","SkillSection_SkillSection","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4805e823.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Fullpage.css'\r\n\r\nexport default class Fullpage extends Component {\r\n  render() {\r\n      const { children } = this.props\r\n    return (\r\n      <section className={`fullpage ${this.props.className || ''}`} id={this.props.id} style={this.props.style}>\r\n        {children}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./DownArrow.css\"\r\n\r\nconst DownArrow = (props) => {\r\n    return (\r\n        <img\r\n            style={{\r\n                filter: `${props.isInvert ? \"invert(100%)\" : \"none\"}`\r\n            }}\r\n            className=\"shadow-drop-2-top\"\r\n            src={props.icon} width=\"30px\"/>\r\n    )\r\n}\r\n\r\n\r\nexport default DownArrow\r\n","import React, {Component} from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownArrow from \"../components/DownArrow\";\r\nimport data from \"../data\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport './TitlesAndIcons.css'\r\nimport {Element, Link} from \"react-scroll/modules\";\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        //changing snowStorm color by style, because it set props in its constructor\r\n        if(prevProps.colorSet != this.props.colorSet) {\r\n            let elements = document.getElementsByClassName(\"___snowStorm___\");\r\n            for(let i = 0 ; i < elements.length ; i++) {\r\n                elements[i].style.color = data.colorSets[this.props.colorSet].snowColor\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return [\r\n            <Element name=\"homeSection\" className=\"element\"/>,\r\n            <Fullpage className=\"first\"  id=\"snow-target\"\r\n            style={{\r\n                backgroundColor : `${data.colorSets[this.props.colorSet].bgColor}`\r\n            }}>\r\n                <SnowStorm\r\n                    freezeOnBlur = {false}\r\n                    useTwinkleEffect = {false}\r\n                    vMaxX = {0}\r\n                    vMaxY = {1}\r\n                    followMouse = {false}\r\n                    snowStick = {false}\r\n                    snowColor = \"rgba(255,255,255,0.5)\"\r\n                    targetElement = \"snow-target\"\r\n\r\n                />\r\n                <div className=\"page-body\">\r\n                    <h1 className=\"title\" style={{color:`${data.colorSets[this.props.colorSet].titleColor}`}}>\r\n                        {data.title}\r\n                    </h1>\r\n                    <h3 className=\"lead\" style={{color:`${data.colorSets[this.props.colorSet].subTitleColor}`}}>\r\n                        {data.subtitle}\r\n                    </h3>\r\n                    <div className=\"social-icon-container\">\r\n                        {\r\n                            Object.keys(data.links).map(k => {\r\n                                    return (\r\n                                        <SocialIcon key={k} url={data.links[k]} bgColor={data.colorSets[this.props.colorSet].iconColor}/>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"aboutSection\" spy={true} smooth={true} duration={500}>\r\n                    <DownArrow icon={data.icons.down}/>\r\n                </Link>\r\n            </Fullpage>\r\n        ];\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data\";\r\nimport './AboutSection.css'\r\nimport DownArrow from \"../components/DownArrow\";\r\nimport {Link, Element} from 'react-scroll'\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n    render() {\r\n        return [\r\n            <Element name=\"aboutSection\" className=\"element\"/>,\r\n            <Fullpage className=\"second\">\r\n\r\n                <div className=\"page-body\">\r\n                    <h2 className=\"title\">{data.sections[0].title}</h2>\r\n                    <hr/>\r\n                    {\r\n                        data.sections[0].items.map((obj) => {\r\n                            return (<p className=\"content\">{obj.content}</p>)\r\n                        })\r\n                    }\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"skillSection\" spy={true} smooth={true} duration={500}>\r\n                    <DownArrow icon={data.icons.down} isInvert={true}/>\r\n                </Link>\r\n            </Fullpage>\r\n        ]\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './SkillCard.css'\r\n\r\nexport default class SkillCard extends Component {\r\n    render() {\r\n        const { skill } = this.props\r\n        return (\r\n            <div className=\"card\"\r\n                 style={{\"background-color\":`${skill.content.color}`}}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} width=\"150px\" height=\"150px\"/>\r\n                </div>\r\n\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4>{skill.content.title}</h4>\r\n                </div>\r\n                {/*<div*/}\r\n                    {/*className=\"skill-level\"*/}\r\n                    {/*style={*/}\r\n                        {/*{*/}\r\n                            {/*width:`${skill.content.level*10}%`,*/}\r\n                            {/*\"background-color\": `${skill.content.color}`,*/}\r\n                            {/*height: \"20px\",*/}\r\n                            {/*\"align-self\" : \"flex-start\"*/}\r\n                        {/*}*/}\r\n                    {/*}/>*/}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport data from \"../data\";\r\nimport \"./SkillSection.css\";\r\nimport {Element} from 'react-scroll'\r\n\r\nexport default class SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"third\">\r\n                <Element name=\"skillSection\" className=\"element\"/>\r\n                <h2 className=\"title\">{data.sections[1].title}</h2>\r\n                <div className=\"card-wrapper\">\r\n                    {data.sections[1].items.map(skill => {\r\n                        return (\r\n                            <SkillCard skill={skill}/>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport data from \"../data\";\r\nimport './NavBar.css'\r\nimport {Link} from 'react-scroll'\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wandIcon: data.icons.magicWand\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"nav-bar\">\r\n\r\n                <div className=\"nav-menu\">\r\n                    <Link className=\"nav-link\" activeClass=\"active\" to=\"homeSection\" spy={true} smooth={true}\r\n                          duration={500}>\r\n                        Home\r\n                    </Link>\r\n                    <Link className=\"nav-link\" activeClass=\"active\" to=\"aboutSection\" spy={true} smooth={true}\r\n                          duration={500}>\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"nav-link\" activeClass=\"active\" to=\"skillSection\" spy={true} smooth={true}\r\n                          duration={500}>\r\n                        Skills\r\n                    </Link>\r\n                </div>\r\n                <a className=\"nav-icon\" href=\"#\">\r\n                    <img src={this.state.wandIcon}\r\n                         onClick={() => {\r\n                             let scrollPos = window.scrollY\r\n                             this.props.ColorChangerTrigger(scrollPos)}}\r\n                         onMouseEnter={() => {\r\n                             this.setState({\r\n                                 wandIcon: data.icons.magicWandHover\r\n                             })\r\n                         }}\r\n                         onMouseLeave={() => {\r\n                             this.setState({\r\n                                 wandIcon: data.icons.magicWand\r\n                             })\r\n                         }}\r\n                         height={25}\r\n                         style={{\r\n                             display : `${this.props.showWand ? \"\" : \"none\"}`\r\n                         }}/>\r\n                </a>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport NavBar from \"./components/NavBar\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            colorSet: 0,\n            showWand: true,\n            scrollPos: 0,\n            scrollBreaked: false\n        }\n    }\n\n    /** change color  method\n     * it store last scroll position before change the colorset*/\n    changeColor(scrollPos) {\n        this.setState({\n            colorSet: this.getRandomColor(),\n            scrollBreaked : true,\n            scrollPos : scrollPos})\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll = (event) => {\n        // jump to last scroll position after color change, to keep position\n        if (window.scrollY == 0 && this.state.scrollBreaked) {\n            window.scrollTo(0,this.state.scrollPos)\n            this.setState({scrollBreaked : false})\n        } // magic wand only works on title section\n        else if(window.scrollY <= 300) {\n            this.setState({showWand: true})\n        }\n        else{this.setState({showWand : false})}\n    }\n\n    getRandomColor = () => {\n        let cs = Math.floor((Math.random() * 4) + 0)\n        // making sure to get a different number\n        return (cs === this.state.colorSet) ? this.getRandomColor() : cs\n    }\n\n\n    render() {\n        return (\n\n\n            <div className=\"App\">\n                <NavBar ColorChangerTrigger={this.changeColor.bind(this)} showWand = {this.state.showWand} />\n                <TitlesAndIcons colorSet={this.state.colorSet}/>\n                <AboutSection/>\n                <SkillSection/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}