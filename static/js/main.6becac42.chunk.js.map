{"version":3,"sources":["components/Fullpage.js","components/DownArrow.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","DownArrow","style","filter","isInvert","src","icon","width","TitlesAndIcons","Fullpage_Fullpage","data","title","subtitle","Object","keys","links","map","k","react_social_icons","key","url","bgColor","modules","activeClass","to","spy","smooth","duration","src_components_DownArrow","icons","down","name","sections","items","content","SkillCard","skill","background-color","color","image","height","SkillSection","SkillCard_SkillCard","App","TitlesAndIcons_TitlesAndIcons","AboutSection_TitlesAndIcons","SkillSection_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6becac42.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Fullpage.css'\r\n\r\nexport default class Fullpage extends Component {\r\n  render() {\r\n      const { children } = this.props\r\n    return (\r\n      <section className={`fullpage ${this.props.className || ''}`}>\r\n        {children}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./DownArrow.css\"\r\n\r\nconst DownArrow = (props) => {\r\n    return (\r\n        <img\r\n            style={{\r\n                filter: `${props.isInvert ? \"invert(100%)\" : \"none\"}`\r\n            }}\r\n            className=\"shadow-drop-2-top\"\r\n            src={props.icon} width=\"30px\"/>\r\n    )\r\n}\r\n\r\n\r\nexport default DownArrow\r\n","import React, {Component} from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownArrow from \"../components/DownArrow\";\r\nimport data from \"../data\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport './TitlesAndIcons.css'\r\nimport {Link} from \"react-scroll/modules\";\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"first\">\r\n                <div className=\"page-body\">\r\n                    <h1 className=\"title\">\r\n                        {data.title}\r\n                    </h1>\r\n                    <h3 className=\"lead\">\r\n                        {data.subtitle}\r\n                    </h3>\r\n                    <div className=\"social-icon-container\">\r\n                        {\r\n                            Object.keys(data.links).map(k => {\r\n                                    return (\r\n                                        <SocialIcon key={k} url={data.links[k]} bgColor=\"#bbb\"/>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"aboutSection\" spy={true} smooth={true} duration={500}>\r\n                    <DownArrow icon={data.icons.down}/>\r\n                </Link>\r\n            </Fullpage>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data\";\r\nimport './AboutSection.css'\r\nimport DownArrow from \"../components/DownArrow\";\r\nimport {Link, Element} from 'react-scroll'\r\n\r\nexport default class TitlesAndIcons extends Component {\r\n    render() {\r\n        return [\r\n            <Element name=\"aboutSection\" className=\"element\"/>,\r\n            <Fullpage className=\"second\">\r\n\r\n                <div className=\"page-body\">\r\n                    <h2 className=\"title\">{data.sections[0].title}</h2>\r\n                    <hr/>\r\n                    <p className=\"content\">{data.sections[0].items[0].content}</p>\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"skillSection\" spy={true} smooth={true} duration={500}>\r\n                    <DownArrow icon={data.icons.down} isInvert={true}/>\r\n                </Link>\r\n            </Fullpage>\r\n        ]\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './SkillCard.css'\r\n\r\nexport default class SkillCard extends Component {\r\n    render() {\r\n        const { skill } = this.props\r\n        return (\r\n            <div className=\"card\"\r\n                 style={{\"background-color\":`${skill.content.color}`}}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} width=\"150px\" height=\"150px\"/>\r\n                </div>\r\n\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4>{skill.content.title}</h4>\r\n                </div>\r\n                {/*<div*/}\r\n                    {/*className=\"skill-level\"*/}\r\n                    {/*style={*/}\r\n                        {/*{*/}\r\n                            {/*width:`${skill.content.level*10}%`,*/}\r\n                            {/*\"background-color\": `${skill.content.color}`,*/}\r\n                            {/*height: \"20px\",*/}\r\n                            {/*\"align-self\" : \"flex-start\"*/}\r\n                        {/*}*/}\r\n                    {/*}/>*/}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport data from \"../data\";\r\nimport \"./SkillSection.css\";\r\nimport {Element} from 'react-scroll'\r\n\r\nexport default class SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"third\">\r\n                <Element name=\"skillSection\" className=\"element\"/>\r\n                <h2 className=\"title\">{data.sections[1].title}</h2>\r\n                <div className=\"card-wrapper\">\r\n                    {data.sections[1].items.map(skill => {\r\n                        return (\r\n                            <SkillCard skill={skill}/>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"navigation\" />\n        <TitlesAndIcons />\n        <AboutSection/>\n        <SkillSection/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}